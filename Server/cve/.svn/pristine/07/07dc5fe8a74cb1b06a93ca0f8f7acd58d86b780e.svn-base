import gui
$include "guih.icn"
$include "../common/defaults.icn"
link graphics
link io

# This trick removes the "undeclared identifer" warning when
# no voice facilities are present in the VM.
procedure VAttrib(x, y)
   VAttrib := (proc("VAttrib",0) | &null)
   return (\VAttrib)(x,y)
end
procedure PlayAudio(x)
   PlayAudio := (proc("PlayAudio",0) | &null)
   return (\PlayAudio)(x)
end

class VoIP(voice_toolbar, VoiceDisabled_btn,
	   VoiceLocal_btn, VoicePhone_btn, Voice_End_btn, Voice_Talk_btn,
	   Voice_users_list, Voice_TalkRequest, VoicePhone_overlay_item,
	   VoiceLocal_overlay_item,
	   CurrentActiveRoom_list, CurrentRoom_list, CurrentRoom_label,
	   Display_list, DialingOut_list, DialingIn_list, Hold_list, Line_list)

   method on_VoiceDisabled_btn(ev)
      if If_Have_Voice() = 1 then {
	 if session.VoiceState == "Private" then
	    DisableCellPhone()
	 else if session.VoiceState == "Local" then
	    DisableLocalRoom()
	 view.VCSC_tab.set_which_one(view.view_3d)

	 view.Science_Hall_overlay.set_which_one(view.View_3D_overlay_item)
	 view.view_3d.set_label(MODEL_NAME)
	 view.restore_3DView()
	 }
      else {
	 view.write_to_chat_win("VM has no Voice")
	 voipdlg.check_box_group_1.set_which_one(voipdlg.VoiceDisabled_btn)
	 }
      #avatar.actions( "set_talk_off", world.avat_step_move)
      view.resize()
   end

   method on_VoiceLocal_btn(ev)
      if If_Have_Voice() = 1 then {
	 view.VCSC_tab.set_which_one(view.view_3d)
	 view.resize_3DView() 
	 #WAttrib(subwin.cwin, "canvas=hidden")
	 view.Science_Hall_overlay.set_which_one(view.VoiceLocal_overlay_item)
	 view.view_3d.set_label("Voice")
	 EnableLocalRoom()
	 }
      else {
	 view.write_to_chat_win("VM has no Voice")
	 voipdlg.check_box_group_1.set_which_one(voipdlg.VoiceDisabled_btn)
	 }
      view.resize()
   end

   method on_VoicePhone_btn(ev)
      if If_Have_Voice() = 1 then {
	 view.VCSC_tab.set_which_one(view.view_3d)
	 view.resize_3DView()  
	 #WAttrib(subwin.cwin, "canvas=hidden")
	 view.Science_Hall_overlay.set_which_one(view.VoicePhone_overlay_item)
	 view.view_3d.set_label("Voice")
	 EnableCellPhone()
	 }
      else {
	 view.write_to_chat_win("VM has no Voice")
	 voipdlg.check_box_group_1.set_which_one(voipdlg.VoiceDisabled_btn)
	 }
      view.resize()
   end

   # new voip: talk & end btn's
   method on_Voice_Talk_btn(ev)
      local index, name, L :=[]
      EnableCellPhone()
      #index := Voice_users_list.get_selection()
      #name := session.WhoIsUpList[index]
      name := voipdlg.Voice_users_list.get_contents()
      if \name then {
	 if name ~=="" then { 
	    if name ~=== session.uid then {
	       if Voice_TalkRequest === name then {
		  session.Write("\\vtalk " || Voice_TalkRequest )
		  Voice_TalkRequest := ""
		  }
	       else
		  session.Write("\\vrtalk " || name )
	       view.write_to_chat_win(" I am Talking to>>"||name||" and "||
				      Voice_TalkRequest)
	       }
	    else
	       view.write_to_chat_win(" you can not talk to yourself !!!:" ||
				      name)
	    }
	 else
	    view.write_to_chat_win(" name is empty, no selection is done ?")
	 }
      else
	 view.write_to_chat_win(" name is null, no selection is done ?")
   end

   method on_Voice_End_btn(ev)
      local index, name 
      if \session.VoiceSession then {
	 index := voipdlg.Voice_users_list.get_selection()
	 name := session.WhoIsUpList[index]
	 if \name then {
	    session.Write("\\vend " || name )
	    VAttrib(session.VoiceSession,"cast-="||name)
	    view.write_to_chat_win(" I did disconnect " || name ||"?" )
	    }
	 else
	    view.write_to_chat_win(" name is null, no selection is done ?")
	 }
      else
	 view.write_to_chat_win(" The Voice Session is OFF!" )
   end

#--Virtual Cell Phone
   method CellPhone_Terminate()
      local x, names_list:=[ ]
      if \session.VoiceSession then {
	 names_list := VAttrib(session.VoiceSession,"cast=list(name)")
	 every x := ! names_list do {
	    view.write_to_chat_win(" name = "||x)
	    session.Write("\\vlend " || x )
	    VAttrib(session.VoiceSession,"cast-="||x)
	    }
	 }
   end

   method EnableCellPhone()
      if session.VoiceState ~=== "Private" then {
	 session.VoiceState := "Private"
	 voipdlg.check_box_group_1.set_which_one(voipdlg.VoicePhone_btn)
	 if \session.VoiceSession then {
	    close(session.VoiceSession) # close the other voice session
	    session.VoiceSession := &null
	    }
	 session.Write("\\vstate " || session.VoiceState)
	 session.VoiceSession := open("5000","V")
	 session.Write("\\say My Virtual Cell Phone is ON!")
	 ClearVoiceLists()
	 }
      view.write_to_chat_win("Virtual Cell Phone is ON")
      #avatar.actions( "set_talk_on", world.avat_step_move)
   end

   method DisableCellPhone()
      if session.VoiceState === "Private" then {
	 session.VoiceState := "Off"
	 session.Write("\\vstate " || session.VoiceState)
	 CellPhone_Terminate()
	 if \session.VoiceSession then {
	    close(session.VoiceSession)
	    session.VoiceSession := &null   #To prevent reclosing 
	    session.Write("\\say My Virtual Cell Phone is OFF!")
	    }
	 }
      view.write_to_chat_win("Virtual Cell Phone is OFF")
      #avatar.actions( "set_talk_off", world.avat_step_move)
   end

   method UpdateDisplayList(WhoIsUp)
      local oldpos:=1, newpos, name
      every  newpos := find("\n",WhoIsUp) do {
	 name := WhoIsUp[oldpos:newpos]
	 put(session.WhoIsUpList,name)
	 oldpos := newpos+1
	 }
      name := WhoIsUp[oldpos:0]
      put(session.WhoIsUpList,name)
      Display_list.set_contents(session.WhoIsUpList)
   end

   method FromDialingOut_to_Linelist(address)
   local L, name, i, pos
      pos := find(":",address)
      name := address[1:pos]
      L := DialingOut_list.get_contents()
      every i:=1 to *L do
	 if name === L[i] then {
	    delete(L,i)
	    Line_list.set_contents(put(Line_list.get_contents(), name))
	    DialingOut_list.set_contents(L)
	    view.write_to_chat_win(name ||": Opening a VoIP session with you")
	    }
   end

   method FromDialingOut_to_Holdlist(name)
   local L, i
      L := DialingOut_list.get_contents()
      every i := 1 to *L do
	 if name === L[i] then {
	    delete(L,i)
	    Hold_list.set_contents(put(Hold_list.get_contents(), name))
	    DialingOut_list.set_contents(L)
	    view.write_to_chat_win(name ||
			": Putting you On Hold, he may talk to you later !")
	    }
   end

   method FromLineList_to_Holdlist(name)
   local L, i
      L := Line_list.get_contents()
      every i:=1 to *L do
	 if name === L[i] then {
	    view.write_to_chat_win("name=["||name||"]")
	    delete(L,i)
	    Hold_list.set_contents(put(Hold_list.get_contents(), name))
	    Line_list.set_contents(L)
	    VAttrib(session.VoiceSession,"cast-="||name)
	    view.write_to_chat_win(name ||
			": Putting you On Hold, he may talk to you later !")
	    }
   end

   method FromLineList_to_Trash(name)
   local L, i
      L := Line_list.get_contents()
      every i:=1 to *L do
	 if name === L[i] then {
	    delete(L,i)
	    Line_list.set_contents(L)
	    VAttrib(session.VoiceSession,"cast-="||name)
	    view.write_to_chat_win(name ||
			": Terminating the Voice Session with you!!")
	    }
   end

   method FromHoldlist_to_LineList(address)
   local L, name, i, pos
      pos := find(":",address)
      name := address[1:pos]
      L := Hold_list.get_contents()
      every i:=1 to *L do
	 if name === L[i] then {
	    view.write_to_chat_win("name=["||name||"]" )
	    delete(L,i)
	    Line_list.set_contents(put(Line_list.get_contents(), name))
	    Hold_list.set_contents(L)
	    view.write_to_chat_win(name||": UnHolding you")
	    }
   end

   method ClearVoiceLists()
      DialingIn_list.set_contents([])
      DialingOut_list.set_contents([])
      Line_list.set_contents([])
      Hold_list.set_contents([])
      Display_list.set_selections([])

      DialingIn_list.set_selections([*(DialingIn_list.get_contents())])
      DialingOut_list.set_selections([*(DialingOut_list.get_contents())])
      Line_list.set_selections([*(Line_list.get_contents())])
      Hold_list.set_selections([*(Hold_list.get_contents())])
      Display_list.set_selections([*(Display_list.get_contents())])
   end

   method Who_Is_Up()
      if \session.VoiceSession then {
	 session.WhoIsUpList:=[ ]
	 Display_list.set_selections([*session.WhoIsUpList])
	 session.Write("\\vphone ") # gets those on the Cell Phone 
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF")
   end

   method Dial()	
   local name, index
      if \session.VoiceSession then {
	 index := Display_list.get_selections()
	 if \index & *index > 0 then {
	    name := session.WhoIsUpList[index[1]]
	    if \name then {
	       if name ~=== session.uid then {
		  view.write_to_chat_win(" I am Calling >> " || name )
		  session.Write("\\vrequest " || name )
		  DialingOut_list.set_contents(
		     put(DialingOut_list.get_contents(),name))
		  DialingOut_list.set_selections(
		     [*(DialingOut_list.get_contents())])
		  Display_list.set_contents(session.WhoIsUpList)
		  }
	       else
		  view.write_to_chat_win(" you can not talk to yourself !!!" )
	       }
	    else
	       view.write_to_chat_win(" No Selection has been made !!!")
	    }
	 else
	    view.write_to_chat_win(" No Selection has been made !!!")
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF  ")
   end 

   #new voip: used for a direct calling that is comming from the dispatcher
   method Talkto(user)
      if user ~=== session.uid then {
	 if /session.VoiceSession then
	    session.VoiceSession := open("5000","V") 
	 VAttrib(session.VoiceSession,"cast+="||user)
	 view.write_to_chat_win(" I am Talking to >> " || user )
	 }
      else
	 view.write_to_chat_win(" you can not talk to yourself !!!" )
   end 

   #new voip: used for a direct calling that is comming from the dispatcher
   method Talkto_Request(user)	
   local index
      Voice_TalkRequest :=""
      if user ~=== session.uid then {
	 every index := 1 to *session.WhoIsUpList do
	    if find(user, session.WhoIsUpList[index]) then {
	       voipdlg.Voice_users_list.set_selection(index)
	       Voice_TalkRequest := user
	       }
	 view.write_to_chat_win("Hi " || user || " is calling you ?, "||
				Voice_TalkRequest  )
	 }
      else
	 view.write_to_chat_win(" you can not talk to yourself !!!" )
   end 

   method Ignore_PhoneCall()
   local L:=[], name, index:=&null
      if \session.VoiceSession then {
	 index := DialingIn_list.get_selections()
	 if *index > 0 then {
	    L := DialingIn_list.get_contents()
	    name := L[index[1]]
	    Hold_list.set_contents(put(Hold_list.get_contents(), name))
	    delete( DialingIn_list.get_contents() ,index[1])
	    session.Write("\\vreject " || name ) 
	    }
	 else
	    view.write_to_chat_win(" No Selection has been made")
	 DialingIn_list.set_selections([*(DialingIn_list.get_contents())])
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF  ")
   end

   method Accept_PhoneCall()
   local L:=[], name, index
      if \session.VoiceSession then {
	 index := DialingIn_list.get_selections()
	 if *index > 0 then {
	    L := DialingIn_list.get_contents()
	    name := L[index[1]]
	    Line_list.set_contents(put(Line_list.get_contents(), name))
	    delete( DialingIn_list.get_contents() ,index[1])
	    session.Write("\\vaccept " || name )
	    }
	 else
	    view.write_to_chat_win("No Selection has been made")
	 DialingIn_list.set_selections([*(DialingIn_list.get_contents())])
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF  ")
   end

   method PutOnLine()
   local L:=[], name, index
      if \session.VoiceSession then {
	 index := Hold_list.get_selections()
	 if *index > 0 then {
	    L := Hold_list.get_contents()
	    name := L[index[1]]
	    Line_list.set_contents(put(Line_list.get_contents(), name))
	    delete( Hold_list.get_contents() ,index[1])
	    view.write_to_chat_win("name=["||name||"]" )
	    session.Write("\\vuhold " || name )
	    }
	 else
	    view.write_to_chat_win(" No Selection has been made")
	 Hold_list.set_selections([*(Hold_list.get_contents())])
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF")
   end

   method PutOnHold()
   local L, name, index
      if \session.VoiceSession then {
	 index := Line_list.get_selections()
	 if *index > 0 then {
	    L := Line_list.get_contents()
	    name := L[index[1]]
	    Hold_list.set_contents(put(Hold_list.get_contents(), name))
	    delete( Line_list.get_contents() ,index[1])
	    view.write_to_chat_win("name=["||name||"]" )
	    session.Write("\\vhold " || name )
	    VAttrib(session.VoiceSession,"cast-="||name)
	    }
	 else
	    view.write_to_chat_win(" No Selection has been made")
	 Line_list.set_selections([*(Line_list.get_contents())])
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF  ")
   end

   method RemoveFromLineList()
   local L, name, index
      if \session.VoiceSession then {
	 index := Line_list.get_selections()
	 if *index > 0 then {
	    L := Line_list.get_contents()
	    name := L[index[1]]
	    FromLineList_to_Trash(name)
	    session.Write("\\vpend " || name )
	    }
	 else
	    view.write_to_chat_win(" No Selection has been made")
	 Line_list.set_selections([*(Line_list.get_contents())])
	 }
      else
	 view.write_to_chat_win("The Cell Phone is OFF  ")
   end

#-------------------------- VoIP local Room ---------------------

   method LocalRoom_Terminate()
   local x, names_list:=[]
      if \session.VoiceSession then {
	 names_list := VAttrib(session.VoiceSession,"cast=list(name)")
	 every x := ! names_list do {
	    view.write_to_chat_win(" name = "||x)
	    session.Write("\\vlend " || x )
	    VAttrib(session.VoiceSession,"cast-="||x)
	    }
	 close(session.VoiceSession) # close the other voice session
	 session.VoiceSession := &null
	 }
      CurrentRoom_list.set_contents([])
      CurrentActiveRoom_list.set_contents([])
   end

   method LocalRoom_NewConnect()
      # Open new Room-Based Voice Session
      session.VoiceSession := open("5000","V")
      session.Write("\\vlocal ")
   end

   method LocalRoom_Update(room)
      LocalRoom_Terminate() 
      CurrentRoom_label.set_label(room)
      LocalRoom_NewConnect()
   end

   method LocalRoom_addActiveUser(user)
   local name

      VAttrib(session.VoiceSession,"cast+="||user||":5000")
      name := user[1: find(":",user)]
      CurrentActiveRoom_list.set_contents(
		put(CurrentActiveRoom_list.get_contents(), name))
      view.write_to_chat_win("LOCAL ROOM: "||user||" added")
   end

   method LocalRoom_UpdateUsers(WhoIsInRoom)
   local oldpos:=1, newpos, name
      every  newpos := find("\n",WhoIsInRoom) do {
	 name := WhoIsInRoom[oldpos:newpos]
	 CurrentRoom_list.set_contents(
		put(CurrentRoom_list.get_contents(),name))
	 oldpos := newpos+1
	 }
      name := WhoIsInRoom[oldpos:0]
      CurrentRoom_list.set_contents(put(CurrentRoom_list.get_contents(), name))
   end

   method LocalRoom_deleteActiveUser(user)
   local L:=[],i
      VAttrib(session.VoiceSession,"cast-="||user)
      L:= CurrentActiveRoom_list.get_contents()
      every i:=1 to *L do {
	 if user === L[i] then {
	    delete(L,i)
	    CurrentActiveRoom_list.set_contents(L)
	    }
	 }
      LocalRoom_deleteUser(user)
   end

   method LocalRoom_deleteUser(user)
   local L:=[],i
      L:= CurrentRoom_list.get_contents()
      every i := 1 to *L do {
	 if user === L[i] then {
	    delete(L,i)
	    CurrentRoom_list.set_contents(L)
	    }
	 }
   end

   method EnableLocalRoom()
      session.VoiceState := "Local"
      session.Write("\\vstate " || session.VoiceState)
      CurrentRoom_list.set_contents([])
      CurrentActiveRoom_list.set_contents([])
      LocalRoom_Update(world.curr_room.name)
      #avatar.actions( "set_talk_on", world.avat_step_move)
   end

   method DisableLocalRoom()
      LocalRoom_Terminate()
      session.VoiceState := "Off"
      session.Write("\\vstate " || session.VoiceState)
      #avatar.actions( "set_talk_off", world.avat_step_move)
   end

   method If_Have_Voice()
      if find("Voice",&features) then
	 return 1
      return 0
   end

   method If_Have_Audio()
      if find("Audio",&features) then
	 return 1
      return 0;
   end

   method on_Dial_btn(ev)
      Dial()
   end

   method on_DialingIn_to_Hold_btn(ev)
      Ignore_PhoneCall()
   end

   method on_DialingIn_to_Line_btn(ev)
      Accept_PhoneCall()
   end

   method on_Hold_to_Line_btn(ev)
      PutOnLine()
   end

   method on_Line_to_Hold_btn(ev)
      PutOnHold()
   end

   method on_Off_btn(ev)
      DisableCellPhone()
      voipdlg.check_box_group_1.set_which_one(voipdlg.VoiceDisabled_btn)
      #WAttrib(subwin.cwin, "canvas=normal")
      view.Science_Hall_overlay.set_which_one(view.View_3D_overlay_item)
      view.restore_3DView()
      view.view_3d.set_label(MODEL_NAME)
      view.resize()
   end

   method on_Who_btn(ev)
      Who_Is_Up()
   end

   method on_HidePhone_btn(ev)
      #WAttrib(subwin.cwin, "canvas=normal")
      view.Science_Hall_overlay.set_which_one(view.View_3D_overlay_item)
      view.restore_3DView()
      view.view_3d.set_label(MODEL_NAME)
      view.resize()
   end

   method on_RemoveLine_btn(ev)
      RemoveFromLineList()
   end

   method on_Local_Hide_btn(ev)
      #WAttrib(subwin.cwin, "canvas=normal")
      view.Science_Hall_overlay.set_which_one(view.View_3D_overlay_item)
      view.restore_3DView()
      view.view_3d.set_label(MODEL_NAME)
      view.resize()
   end

   method on_Local_Off_btn(ev)
      DisableLocalRoom()
      voipdlg.check_box_group_1.set_which_one(voipdlg.VoiceDisabled_btn)
      #WAttrib(subwin.cwin, "canvas=normal")
      view.Science_Hall_overlay.set_which_one(view.View_3D_overlay_item)
      view.restore_3DView(view.view_3d.set_label(MODEL_NAME))
      view.resize()
   end

    method VoIP_toolbar()
    local check_box_group_1
    voice_toolbar := Panel()
    voice_toolbar.set_pos("3%", "65%")
    voice_toolbar.set_size("95%", "33%")
    voice_toolbar.set_draw_border()
    voice_toolbar.set_attribs("bg=light whitish gray", "resize=on")
    check_box_group_1 := CheckBoxGroup()
    VoiceDisabled_btn := IconButton()
    VoiceDisabled_btn.set_pos("22%", "2%")
    VoiceDisabled_btn.set_size("19%", "50%")
    VoiceDisabled_btn.set_draw_border()
    VoiceDisabled_btn.connect(self, "on_VoiceDisabled_btn", BUTTON_PRESS_EVENT)
    VoiceDisabled_btn.set_toggles()
    check_box_group_1.add(VoiceDisabled_btn)
    check_box_group_1.set_which_one(VoiceDisabled_btn)
    VoiceDisabled_btn.set_imgs("32,c1,66666666666666666666666666666666666666666666600066666666666366666666666666660i505366666663366666666666666660i505653666633666666666666666660i550666366333666666666666666660i6<3366663666666666666666666660i6<6056666366666666666666666660i6<6505666636666666666366666660i6<<<50566663666666633366000000i6<6<6035666633666333666660iiiii6<6<66000666663663666666660i<55i<6666603306666366666666666i<<<i666666603330666366666666666i<66i666666603330666366666666666i<6<i<6<6<6<03330666366666666666i<<6i6<6<6<603330666366333333333i<5<i<5<5<5<03330666366666666666i<<5i5<5<5<5033306663666666666660ii<i<5<5<55033056663666666666660iiiii<5<55503335666366666666666000000i<<<<<033566663663666666666666660iiii<0356666636663333666666666660iiii30566663666666663366666666660iii505666636666666666366666666660iii056666366666666666666666666660ii3366663666666666666666666666660ii0666366336666666666666666666660i05653666633666666666666666666660i03366666663366666666666666666660666666666666366666666666666666666666666666666666666666666666666666666666666666666", "32,c1,6666666666666AAAAA66666666666666666666666AAAAAAAAAAAAA666663666666666666AAAAAi5053AAAAA663366666666666AAAA66i505653666AAA666666666666AAA666i55066636633AAA6666666666AAA666i6<3366663666AAAA66666666AAA666i6<6056666366AAA6AA6666666AA666i6<6505666636AAAA6AA663666AA666i6<<<50566663AAAA666AA3666AAA66i6<6<60356666AAAA63336AA666AAiii6<6<66035666AAAA636666AA666AA55i<6666603566AAAA6666666AA66iAA<i66666660033AAAA36666666AA66AA66i6666666036AAAA6366666666AA6AA6<i<6<6<6<03AAAA66366666666AA6AA<6i6<6<6<603AAA666366333333AA3AA5<i<5<5<5<0AAA0666366666666AA6AA<5i5<5<5<5AAAA0666366666666AA6iAA<i<5<5<5AAAA0566636666666AA666AAiii<5<5AAAA33566636666666AA666AA000i<5AAAA335666636636666AA666AAA660iAAAA0356666636663336AA6666AA666AAAAi305666636666666AA366666AA6AAAAii50566663666666AA6636666AAAAAA0iii0566663666666AA66666666AAAA660ii33666636666AAA6666666666AAA6660ii066636633AAA666666666666AAAA660i0565366AAAA666666666666666AAAAA0i053AAAAA663366666666666666AAAAAAAAAAAAA66666366666666666666666AAAAA6666666666666666666666666666666666666666666666")
    voice_toolbar.add(VoiceDisabled_btn)
    VoiceLocal_btn := IconButton()
    VoiceLocal_btn.set_pos("40%", "2%")
    VoiceLocal_btn.set_size("19%", "50%")
    VoiceLocal_btn.set_draw_border()
    VoiceLocal_btn.connect(self, "on_VoiceLocal_btn", BUTTON_PRESS_EVENT)
    VoiceLocal_btn.set_toggles()
    check_box_group_1.add(VoiceLocal_btn)
    VoiceLocal_btn.set_img("32,c1,6666666666666666666S--r66666666666666666666666666rRRRRRR-66666666666666666666666RRRRRRRRR-666666666666666666666S+RRRRRRRRRS66666666666666666666R/RRRRRRRR/Rs666666666666666666sSRRRRRRRRRRSs666666666666>>>>V6sSSRRRRRRRRSSs6666666666><`````(uSSRRRRRRRRRSs666666666><```````<uSRRRRRRRRRRr66666666V<<<<5<<<<<iTRRRRRRRRRSr66666666><<<<<<<<<<i>fRRRRRRRRR666666666ii<<<<<<<<<ii-RRRRRRRR0666666666iii<<<<<<iiii-RRRRRRRs6666666666iiii<<<<i<iii'4::::44Rs666666666i<<<<<<<<<iii'++4++++:S666666666><<<<<<<<<<<>:::::::::RS66666666vi<<<``<<<<iTfffffffffRRr66666666v<``````<(TRRRRRRRRRRRRS666666666><<```<<>RRRRRRRRRRRSRR66666666><5<<<<<<<>RRRRRRRRRRRSRr666666>i<<<<<<<<<i>RREEEERRRRRRR66666vi<<<<<<<<<<<i-EEEEEERRRRRR66666>i<<<<<<<<<<<i>EEEEEEERR::R66666iii<<<<<<<<<iii:eeeeEeeeeRr6666Vi<<<<<<<<<<<i<i'eeeeeeRRr666666i<<<<<<<<<<<<<<iirrrrr!666666666i<<<<<<<<<<<<<<<i66666666666666V<<<<<<<<<<<<<<<<<)6666666666666v<<<<<<`````<<<<<<266666666666666vi<<``````````<<)66666666666666666v>4<<<<<<<(>216666666666666666666666111116666666666666666666")
    voice_toolbar.add(VoiceLocal_btn)
    VoicePhone_btn := IconButton()
    VoicePhone_btn.set_pos("59%", "2%")
    VoicePhone_btn.set_size("19%", "50%")
    VoicePhone_btn.set_draw_border()
    VoicePhone_btn.connect(self, "on_VoicePhone_btn", BUTTON_PRESS_EVENT)
    VoicePhone_btn.set_toggles()
    check_box_group_1.add(VoicePhone_btn)
    VoicePhone_btn.set_img("17,c1,6666455444444566666644555334333566665355554443324666654555534443336666445554444433366664455444444333566644:-444432233566642//ttttt'/2356664t`*******`r256664r`````````r256664t,,,,,,,,,t246664s`````````s346664t*```**``'23466643t/--t--/t33466644443343333334666454434454433246665554444445433466655554444554334666455555444443346664445554444433466645445444444434666454554444433346664444544444443466645445444444335666444455444443356664544544444443566654445444443335666544444444443366665455544444433666664454444433246666654333333334666")
    voice_toolbar.add(VoicePhone_btn)
    Voice_End_btn := TextButton()
    Voice_End_btn.set_pos("1%", "54%")
    Voice_End_btn.set_size("23%", "44%")
    Voice_End_btn.set_attribs("font=serif,16,bold,italic", "fg=dark red")
    Voice_End_btn.connect(self, "on_Voice_End_btn", BUTTON_PRESS_EVENT)
    Voice_End_btn.clear_toggles()
    Voice_End_btn.set_label("End")
    Voice_End_btn.set_internal_alignment("c")
    voice_toolbar.add(Voice_End_btn)
    Voice_Talk_btn := TextButton()
    Voice_Talk_btn.set_pos("75%", "54%")
    Voice_Talk_btn.set_size("23%", "44%")
    Voice_Talk_btn.set_attribs("font=serif,16,bold,italic", "fg=dark green")
    Voice_Talk_btn.connect(self, "on_Voice_Talk_btn", BUTTON_PRESS_EVENT)
    Voice_Talk_btn.clear_toggles()
    Voice_Talk_btn.set_label("Talk")
    Voice_Talk_btn.set_internal_alignment("c")
    voice_toolbar.add(Voice_Talk_btn)
    Voice_users_list := EditList()
    Voice_users_list.set_pos("24%", "56%")
    Voice_users_list.set_size("50%", "40%")
    Voice_users_list.set_selection_list([""])
    voice_toolbar.add(Voice_users_list)
    view.toolbox.add(voice_toolbar)

    voice_toolbar.init()
    voice_toolbar.resize()
end

method  VoIP_PhoneOverlay()
    local border_8, border_6, border_7, 
            label_6, label_7, label_22, label_4, label_5,
            DialingIn_to_Line_btn, Hold_to_Line_btn, Line_to_Hold_btn, RemoveLine_btn,
            HidePhone_btn, Off_btn, Dial_btn, Who_btn,

    VoicePhone_overlay_item := OverlayItem()
    border_6 := Border()
    border_6.set_pos("4", "4")
    border_6.set_size("100%-8", "100%-8")
    border_6.set_attribs("font=serif,14,bold", "bg=light gray")
    border_6.set_internal_alignment("l")
    border_7 := Border()
    border_7.set_pos("41%", "10%")
    border_7.set_size("58%", "65%")
    border_7.set_attribs("bg=very light gray", "resize=on")
    border_7.set_internal_alignment("l")
    Line_list := TextList()
    Line_list.set_pos("40%", "18%")
    Line_list.set_size("22%", "65%")
    Line_list.set_draw_border()
    Line_list.set_attribs("bg=very pale whitish yellow")
    Line_list.set_select_one()
    Line_list.set_contents([""])
    border_7.add(Line_list)
    DialingIn_list := TextList()
    DialingIn_list.set_pos("15%", "18%")
    DialingIn_list.set_size("22%", "30%")
    DialingIn_list.set_align("c", "t")
    DialingIn_list.set_draw_border()
    DialingIn_list.set_attribs("bg=very pale whitish yellow")
    DialingIn_list.set_select_one()
    DialingIn_list.set_contents([""])
    border_7.add(DialingIn_list)
    Hold_list := TextList()
    Hold_list.set_pos("75%", "18%")
    Hold_list.set_size("22%", "65%")
    Hold_list.set_draw_border()
    Hold_list.set_attribs("bg=very pale whitish yellow")
    Hold_list.set_select_one()
    Hold_list.set_contents([""])
    border_7.add(Hold_list)
    label_4 := Label()
    label_4.set_pos("45%", "10%")
    label_4.set_attribs("font=serif,14,bold")
    label_4.set_internal_alignment("l")
    label_4.set_label("On Line")
    border_7.add(label_4)
    label_5 := Label()
    label_5.set_pos("15%", "10%")
    label_5.set_align("c", "t")
    label_5.set_attribs("font=serif,12,bold")
    label_5.set_internal_alignment("l")
    label_5.set_label("Incomming Calls?")
    border_7.add(label_5)
    label_6 := Label()
    label_6.set_pos("80%", "10%")
    label_6.set_attribs("font=serif,14,bold")
    label_6.set_internal_alignment("l")
    label_6.set_label("On Hold")
    border_7.add(label_6)
    DialingIn_to_Line_btn := TextButton()
    DialingIn_to_Line_btn.set_pos("27%", "25%")
    DialingIn_to_Line_btn.set_size("12%", "25")
    DialingIn_to_Line_btn.set_attribs("font=serif,14")
    DialingIn_to_Line_btn.connect(self, "on_DialingIn_to_Line_btn", BUTTON_PRESS_EVENT)
    DialingIn_to_Line_btn.clear_toggles()
    DialingIn_to_Line_btn.set_label(">>")
    DialingIn_to_Line_btn.set_internal_alignment("c")
    border_7.add(DialingIn_to_Line_btn)
    Hold_to_Line_btn := TextButton()
    Hold_to_Line_btn.set_pos("63%", "50%")
    Hold_to_Line_btn.set_size("10%", "25")
    Hold_to_Line_btn.set_attribs("font=serif,14")
    Hold_to_Line_btn.connect(self, "on_Hold_to_Line_btn", BUTTON_PRESS_EVENT)
    Hold_to_Line_btn.clear_toggles()
    Hold_to_Line_btn.set_label("<<")
    Hold_to_Line_btn.set_internal_alignment("c")
    border_7.add(Hold_to_Line_btn)
    Line_to_Hold_btn := TextButton()
    Line_to_Hold_btn.set_pos("63%", "40%")
    Line_to_Hold_btn.set_size("10%", "25")
    Line_to_Hold_btn.set_attribs("font=serif,14")
    Line_to_Hold_btn.connect(self, "on_Line_to_Hold_btn", BUTTON_PRESS_EVENT)
    Line_to_Hold_btn.clear_toggles()
    Line_to_Hold_btn.set_label(" >>")
    Line_to_Hold_btn.set_internal_alignment("c")
    border_7.add(Line_to_Hold_btn)
    RemoveLine_btn := TextButton()
    RemoveLine_btn.set_pos("40%", "83%")
    RemoveLine_btn.set_size("22%", "25")
    RemoveLine_btn.set_attribs("font=serif,12")
    RemoveLine_btn.connect(self, "on_RemoveLine_btn", BUTTON_PRESS_EVENT)
    RemoveLine_btn.clear_toggles()
    RemoveLine_btn.set_label("Disconnect")
    RemoveLine_btn.set_internal_alignment("c")
    border_7.add(RemoveLine_btn)
    border_6.add(border_7)
    HidePhone_btn := TextButton()
    HidePhone_btn.set_pos("82%", "85%")
    HidePhone_btn.set_size("99", "33")
    HidePhone_btn.connect(self, "on_HidePhone_btn", BUTTON_PRESS_EVENT)
    HidePhone_btn.clear_toggles()
    HidePhone_btn.set_label("Hide")
    HidePhone_btn.set_internal_alignment("c")
    border_6.add(HidePhone_btn)
    Off_btn := TextButton()
    Off_btn.set_pos("82%", "76%")
    Off_btn.set_size("99", "33")
    Off_btn.connect(self, "on_Off_btn", BUTTON_PRESS_EVENT)
    Off_btn.clear_toggles()
    Off_btn.set_label("Off")
    Off_btn.set_internal_alignment("c")
    border_6.add(Off_btn)
    border_8 := Border()
    border_8.set_pos("2%", "10%")
    border_8.set_size("39%", "65%")
    border_8.set_attribs("bg=very light gray", "resize=on")
    border_8.set_internal_alignment("l")
    Dial_btn := TextButton()
    Dial_btn.set_pos("40%", "25%")
    Dial_btn.set_size("20%", "25")
    Dial_btn.connect(self, "on_Dial_btn", BUTTON_PRESS_EVENT)
    Dial_btn.clear_toggles()
    Dial_btn.set_label("Call >")
    Dial_btn.set_internal_alignment("c")
    border_8.add(Dial_btn)
    Who_btn := TextButton()
    Who_btn.set_pos("5%", "83%")
    Who_btn.set_size("32%", "25")
    Who_btn.connect(self, "on_Who_btn", BUTTON_PRESS_EVENT)
    Who_btn.clear_toggles()
    Who_btn.set_label("Update?")
    Who_btn.set_internal_alignment("c")
    border_8.add(Who_btn)
    DialingOut_list := TextList()
    DialingOut_list.set_pos("80%", "18%")
    DialingOut_list.set_size("32%", "30%")
    DialingOut_list.set_align("c", "t")
    DialingOut_list.set_draw_border()
    DialingOut_list.set_attribs("bg=very pale whitish yellow")
    DialingOut_list.set_contents([""])
    border_8.add(DialingOut_list)
    label_7 := Label()
    label_7.set_pos("80%", "10%")
    label_7.set_align("c", "t")
    label_7.set_attribs("font=serif,12,bold")
    label_7.set_internal_alignment("l")
    label_7.set_label("Outgoing Calls?")
    border_8.add(label_7)
    label_22 := Label()
    label_22.set_pos("15%", "10%")
    label_22.set_size("44", "16")
    label_22.set_internal_alignment("l")
    label_22.set_label("Users")
    border_8.add(label_22)
    Display_list := TextList()
    Display_list.set_pos("21%", "50%")
    Display_list.set_size("32%", "65%")
    Display_list.set_align("c", "c")
    Display_list.set_draw_border()
    Display_list.set_attribs("bg=very pale whitish yellow")
    Display_list.set_select_one()
    Display_list.set_contents([""])
    border_8.add(Display_list)
    border_6.add(border_8)
    VoicePhone_overlay_item.add(border_6)

    view.Science_Hall_overlay.add(VoicePhone_overlay_item)

    VoicePhone_overlay_item.init()
    VoicePhone_overlay_item.resize()

end

method VoIP_LocalOverlay()
    local  border_9, border_10, border_13, border_11, border_12,
             label_10, label_8, label_11,
             Local_Off_btn, Local_Hide_btn

    VoiceLocal_overlay_item := OverlayItem()
    border_9 := Border()
    border_9.set_pos("4", "4")
    border_9.set_size("100%-8", "100%-8")
    border_9.set_attribs("bg=very light gray", "resize=on")
    border_9.set_internal_alignment("l")
    border_13 := Border()
    border_13.set_pos("50%", "8%")
    border_13.set_size("55.3%", "86%")
    border_13.set_align("c", "t")
    border_13.set_attribs("resize=on")
    border_13.set_internal_alignment("l")
    border_11 := Border()
    border_11.set_pos("3%", "35%")
    border_11.set_size("45%", "61%")
    border_11.set_attribs("resize=on")
    border_11.set_internal_alignment("l")
    label_10 := Label()
    label_10.set_pos("5%", "5%")
    label_10.set_size("90%", "10%")
    label_10.set_attribs("font=serif,16,bold", "resize=on")
    label_10.set_internal_alignment("l")
    label_10.set_label("Active Members:")
    border_11.add(label_10)
    CurrentActiveRoom_list := TextList()
    CurrentActiveRoom_list.set_pos("5%", "18%")
    CurrentActiveRoom_list.set_size("90%", "78%")
    CurrentActiveRoom_list.set_draw_border()
    CurrentActiveRoom_list.set_attribs("bg=very pale whitish yellow", "resize=on")
    CurrentActiveRoom_list.set_contents([""])
    border_11.add(CurrentActiveRoom_list)
    border_13.add(border_11)
    border_10 := Border()
    border_10.set_pos("3%", "5%")
    border_10.set_size("45%", "26%")
    border_10.set_attribs("resize=on")
    border_10.set_internal_alignment("l")
    CurrentRoom_label := Label()
    CurrentRoom_label.set_pos("5%", "40%")
    CurrentRoom_label.set_size("90%", "52%")
    CurrentRoom_label.set_draw_border()
    CurrentRoom_label.set_attribs("font=serif,16,bold", "bg=very pale whitish yellow", "resize=on")
    CurrentRoom_label.set_internal_alignment("l")
    CurrentRoom_label.set_label("Label")
    border_10.add(CurrentRoom_label)
    label_8 := Label()
    label_8.set_pos("5%", "5%")
    label_8.set_size("90%", "35%")
    label_8.set_attribs("font=serif,16,bold", "resize=on")
    label_8.set_internal_alignment("l")
    label_8.set_label("Current Room:")
    border_10.add(label_8)
    border_13.add(border_10)
    border_12 := Border()
    border_12.set_pos("52%", "5%")
    border_12.set_size("46%", "91%")
    border_12.set_attribs("resize=on")
    border_12.set_internal_alignment("l")
    label_11 := Label()
    label_11.set_pos("5%", "2%")
    label_11.set_size("90%", "10%")
    label_11.set_attribs("font=serif,16,bold", "resize=on")
    label_11.set_internal_alignment("l")
    label_11.set_label("All Room Members:")
    border_12.add(label_11)
    CurrentRoom_list := TextList()
    CurrentRoom_list.set_pos("5%", "12%")
    CurrentRoom_list.set_size("90%", "86%")
    CurrentRoom_list.set_draw_border()
    CurrentRoom_list.set_attribs("bg=very pale whitish yellow", "resize=on")
    CurrentRoom_list.set_contents([""])
    border_12.add(CurrentRoom_list)
    border_13.add(border_12)
    border_9.add(border_13)
    Local_Off_btn := TextButton()
    Local_Off_btn.set_pos("80%", "75%")
    Local_Off_btn.set_size("16%", "8%")
    Local_Off_btn.set_attribs("font=serif,14,bold")
    Local_Off_btn.connect(self, "on_Local_Off_btn", BUTTON_PRESS_EVENT)
    Local_Off_btn.clear_toggles()
    Local_Off_btn.set_label("Off")
    Local_Off_btn.set_internal_alignment("c")
    border_9.add(Local_Off_btn)
    Local_Hide_btn := TextButton()
    Local_Hide_btn.set_pos("80%", "85%")
    Local_Hide_btn.set_size("16%", "8%")
    Local_Hide_btn.set_attribs("font=serif,14,bold")
    Local_Hide_btn.connect(self, "on_Local_Hide_btn", BUTTON_PRESS_EVENT)
    Local_Hide_btn.clear_toggles()
    Local_Hide_btn.set_label("Hide")
    Local_Hide_btn.set_internal_alignment("c")
    border_9.add(Local_Hide_btn)
    VoiceLocal_overlay_item.add(border_9)

    view.Science_Hall_overlay.add(VoiceLocal_overlay_item)

    VoiceLocal_overlay_item.init()
    VoiceLocal_overlay_item.resize()

end

initially()
    Voice_TalkRequest:=""
end


class VoIPDlg : Dialog(VoiceDisabled_btn, VoiceLocal_btn, VoicePhone_btn, Voice_End_btn, Voice_Talk_btn, Voice_users_list, check_box_group_1, Voice_Dial_menu)
   method component_setup()
      self.setup()
   end

   method end_dialog()
   end

   method init_dialog()
   end

   method on_VoiceDisabled_btn(ev)
      view.Voice.on_VoiceDisabled_btn(ev)
   end

   method on_VoiceLocal_btn(ev)
      view.Voice.on_VoiceLocal_btn(ev)
   end

   method on_VoicePhone_btn(ev)
      view.Voice.on_VoicePhone_btn(ev)
   end

   method on_Voice_End_btn(ev)
      view.Voice.on_VoicePhone_btn(ev)
   end

   method on_Voice_Talk_btn(ev)
      view.Voice.on_Voice_Talk_btn(ev)
   end

   method on_close_btn(ev)
      dispose()
   end

   method setup()
      self.set_attribs("size=300,100", "resize=on", "font=serif, 16, bold")
      self.set_min_size(300, 100)
      check_box_group_1 := CheckBoxGroup()
      VoiceDisabled_btn := TextButton()
      VoiceDisabled_btn.set_pos("20%", "2%")
      VoiceDisabled_btn.set_size("20%", "30%")
      VoiceDisabled_btn.connect(self, "on_VoiceDisabled_btn", BUTTON_PRESS_EVENT)
      VoiceDisabled_btn.set_toggles()
      check_box_group_1.add(VoiceDisabled_btn)
      check_box_group_1.set_which_one(VoiceDisabled_btn)
      VoiceDisabled_btn.set_label("Disable")
      VoiceDisabled_btn.set_internal_alignment("c")
      self.add(VoiceDisabled_btn)
      VoiceLocal_btn := TextButton()
      VoiceLocal_btn.set_pos("40%", "2")
      VoiceLocal_btn.set_size("20%", "30%")
      VoiceLocal_btn.connect(self, "on_VoiceLocal_btn", BUTTON_PRESS_EVENT)
      VoiceLocal_btn.set_toggles()
      check_box_group_1.add(VoiceLocal_btn)
      VoiceLocal_btn.set_label("Local")
      VoiceLocal_btn.set_internal_alignment("c")
      self.add(VoiceLocal_btn)
      VoicePhone_btn := TextButton()
      VoicePhone_btn.set_pos("60%", "2")
      VoicePhone_btn.set_size("20%", "30%")
      VoicePhone_btn.connect(self, "on_VoicePhone_btn", BUTTON_PRESS_EVENT)
      VoicePhone_btn.set_toggles()
      check_box_group_1.add(VoicePhone_btn)
      VoicePhone_btn.set_label("Phone")
      VoicePhone_btn.set_internal_alignment("c")
      self.add(VoicePhone_btn)
      Voice_Talk_btn := TextButton()
      Voice_Talk_btn.set_pos("1%", "50%")
      Voice_Talk_btn.set_size("20%", "30%")
      Voice_Talk_btn.set_attribs("fg=dark red")
      Voice_Talk_btn.connect(self, "on_Voice_Talk_btn", BUTTON_PRESS_EVENT)
      Voice_Talk_btn.clear_toggles()
      Voice_Talk_btn.set_label("Talk")
      Voice_Talk_btn.set_internal_alignment("c")
      self.add(Voice_Talk_btn)
      Voice_users_list := EditList()
      Voice_users_list.set_pos("21%", "50%")
      Voice_users_list.set_size("58%", "30%")
      Voice_users_list.set_selection_list([""])
      self.add(Voice_users_list)
      Voice_End_btn := TextButton()
      Voice_End_btn.set_pos("79%", "50%")
      Voice_End_btn.set_size("20%", "30%")
      Voice_End_btn.set_attribs("fg=dark red")
      Voice_End_btn.connect(self, "on_Voice_End_btn", BUTTON_PRESS_EVENT)
      Voice_End_btn.clear_toggles()
      Voice_End_btn.set_label("End")
      Voice_End_btn.set_internal_alignment("c")
      self.add(Voice_End_btn)
      self.connect(self, "on_close_btn", CLOSE_BUTTON_EVENT)
   end

   initially
      self.Dialog.initially()
end

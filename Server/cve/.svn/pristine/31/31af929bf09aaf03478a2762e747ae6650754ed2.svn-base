################################################################
#   File:     pendingsdlg.icn
#   Subject:  Manages pending invitations/requests
#
#   Author:   Hani Bani-Salameh
#   Date:     February 18, 2010
################################################################

import gui
$include "guih.icn"

global pendings_tbl, gui_pendings_tbl, myargs, p_args, msg_txt, showEmaildlg, 
   myaction, n_myaction, gui_emails_tbl
global p_id, p_name, p_subject, p_date, p_status,  # variables passed 
   p_comment, n_actionsList, btn_lbl               # from the notification
                                                   # dialog
record gui_pending_invitation(pid, uname, psubject, pdate, pstatus)

class PendingsDlg : Dialog(action_lbl, activity_age, activity_comments, 
   activity_priority, activity_subject, usr_name, actions_lst, 
   pending_activity_tbl, usr_status, actionsList, index, activity_pid, pinv, recordinfo_lbl, cancel_btn, ok_btn)
   method component_setup()
      self.setup()
   end

   method end_dialog()
   end

   method init_dialog()
      local pinv2, avat, gui_pinv
      recordinfo_lbl.set_wrap_mode(25)
      pendings_tbl := []
      gui_pendings_tbl := []
      gui_emails_tbl := []

      every pinv := !(world.user_inventory.pending_inv_table) do {
         pinv2:=copy(pinv)
         put(pendings_tbl, pinv2)

         pinv2.pdate := get_time(integer(pinv.pdate))
         if \(avat := world.get_avatar(pinv.uname)) then {
            pinv2.pstatus := avat.get_activity_status()
            }
         else pinv2.pstatus := "Offline"

         gui_pinv := gui_pending_invitation()
         gui_pinv.pid := pinv2.pid
         gui_pinv.uname := pinv2.uname
         gui_pinv.psubject := pinv2.psubject
         gui_pinv.pdate := pinv2.pdate
         if \(avat := world.get_avatar(pinv.uname)) then {
            pinv2.pstatus := avat.get_activity_status()
            }
         gui_pinv.pstatus := pinv2.pstatus
         if gui_pinv.psubject === ("Group Message(New)" | 
            "Message(Email)(New)"|"Group Message(Old)" | 
            "Message(Email)(Old)") then {
            put(gui_emails_tbl, gui_pinv)
            }
         else put(gui_pendings_tbl, gui_pinv)
         }

      if /emails_selected then {
         if *gui_pendings_tbl > 0 then {  
            pending_activity_tbl.set_contents(gui_pendings_tbl)
            activity_pid.set_column_width(0)
            }
         }
     else {
         if *gui_emails_tbl > 0 then {
            pending_activity_tbl.set_contents(gui_emails_tbl)
            activity_pid.set_column_width(0)
            showEmaildlg := ReadEmail()
            }
         else view.write_to_chat_win("Your inbox is empty (0 emails)...")
         }
   end

   method ide_pendings(p_args)
      myargs := p_args
   end

   method on_actions_lst(ev)
      local indx
      if \actionsList then
         myaction := \actionsList[actions_lst.get_selection()]
      on_actions(myaction, indx)
   end

   method on_actions(myaction, indx)
      local line, user, index_counter, slave, msg_contents, Addcounter, 
         str_users, userID, sigName, sigOwner, projName, projOwner, sdp_flag,
         sigType, projType, str, usrName#, pending_inv_table
     /index := indx
     case \myaction of {
         "Accept" : {
            flag := 1
            if pendings_tbl[index][3] == "IDE Session" then {
               if pendings_tbl[index][7] ~== "Offline" then
                  world.nsh_dialog.CETL_New(myargs, flag)
               }
            else if pendings_tbl[index][3] == "IDE: Take Turn" then {
               if pendings_tbl[index][7] ~== "Offline" then
                  world.nsh_dialog.Received_IDE_Lock_Request(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Forward IDE Session" then {
               if pendings_tbl[index][7] ~== "Offline" then {
                  myargs ? {
                     user := tab(find(" "))
                     move(1)
                     index_counter := integer(tab(find(" ")))
                     move(1)
                     slave := tab(find(" "))
                     move(1)
                     file_name := tab(find("|"))
                     move(1)
                     file_contents := tab(find("@@"))
                     move(2)
                     msg_contents := tab(find("$$"))
                     move(2)
                     hostuser:=  tab(find("$$"))
                     move(2)
                     Addcounter:= integer(tab(find(" ")))
                     move(1)
                     str_users:= tab(find(" "))
                     move(1)
                     sdp_flag := integer(tab(0))
                     }
                  session.Write("\\CETLOpen " ||slave||" "||file_name||"|"||
                                file_contents||"@@"||msg_contents||"$$"||
                                hostuser||" "|| sdp_flag)

                  session.Write("\\tell "||pendings_tbl[index][2]||" "||
                  view.user_me||" has accepted to forward the session invitation")
                  }
               }
            else if pendings_tbl[index][3] == "Group Invitation" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := pendings_tbl[index][2]
                  myargs := userID||" "||sigName||" "||sigOwner
                  }
               ici_groups.Invite_to_join_group(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Project Invitation" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := pendings_tbl[index][2]
                  myargs := userID||" "||projName||" "||projOwner||" "||projOwner
                  }

               projectdlg.Invite_to_join_project(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Friendship Request" then {
               if /myargs then {
                  userID := view.user_me
                  hostuser := pendings_tbl[index][2]
                  myargs := userID||" "||hostuser
                  }
               ici_groups.addFriend_invitation(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Join Group" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := pendings_tbl[index][2]
                  myargs := userID||" "||sigName||" "||sigOwner
                  }
               ici_groups.accept_group_join_request(myargs)
               }
            else if pendings_tbl[index][3] == "Join Project" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := pendings_tbl[index][2]
                  myargs := userID||" "||projName||" "||projOwner
                  }
               projectdlg.accept_project_join_request(myargs)
               }

            }
         "Ignore" : {
            flag := 0
            if pendings_tbl[index][3] == "IDE Session" then {
               if pendings_tbl[index][7] ~== "Offline" then
                  world.nsh_dialog.CETL_New(myargs, flag)
               }
            else if pendings_tbl[index][3] == "IDE: Take Turn" then {
               if pendings_tbl[index][7] ~== "Offline" then
                  world.nsh_dialog.Received_IDE_Lock_Request(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Forward IDE Session" then {
               if pendings_tbl[index][7] ~== "Offline" then {
                  session.Write("\\tell "||pendings_tbl[index][2]||" "||
                  view.user_me||" has rejected to forward "|| 
                  "the session invitation")
                  }
               }
            else if pendings_tbl[index][3] == "Group Invitation" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := pendings_tbl[index][2]
                  myargs := userID||" "||sigName||" "||sigOwner
                  }
               ici_groups.Invite_to_join_group(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Project Invitation" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := pendings_tbl[index][2]
                  myargs := userID||" "||projName||" "||projOwner||" "||projOwner
                  }
               projectdlg.Invite_to_join_project(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Friendship Request" then {
               if /myargs then {
                  userID := view.user_me
                  hostuser := pendings_tbl[index][2]
                  myargs := userID||" "||hostuser
                  }
               ici_groups.addFriend_invitation(myargs, flag)
               }
            else if pendings_tbl[index][3] == "Join Group" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := pendings_tbl[index][2]
                  }
               else {
                  myargs ? {
                     userID := tab(find(" "))
                     move(1)
                     sigName := tab(find(" "))
                     move(1)
                     sigOwner:= tab(0)
                     }
                  }
               session.Write("\\tell "||sigOwner ||
                  " has rejected your request to join group "||sigName)
               }
            else if pendings_tbl[index][3] == "Join Project" then {
               if /myargs then {
                  userID := view.user_me
                  (pendings_tbl[index][6]) ? {
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := pendings_tbl[index][2]
                  }
               else {
                  args ? {
                     userID := tab(find(" "))
                     move(1)
                     projName := tab(find(" "))
                     move(1)
                     projOwner:= tab(0)
                     }
                  }
               session.Write("\\tell "||projOwner ||
                  " has rejected your request to join project "||projName)
               }

            }
         "Forward" : {
            if pendings_tbl[index][3] == "IDE Session" then {
               if pendings_tbl[index][7] ~== "Offline" then {
                  fwrddlg.forwarded_pendings(myargs, pendings_tbl[index][2], 0)
                  fwrddlg.show_modal()
                  }
               }
            if (pendings_tbl[index][3] == "Group Message(New)") then {
               pendings_tbl[index][6] ? {
                  str := tab(find("~Group("))
                  move(7)
                  sigName := tab(find(")"))
                  }
               showEmail(myargs, pendings_tbl[index][2], 1, "forward", sigName, "sig")
               }
            if (pendings_tbl[index][3] == "Message(Email)(New)") then {
               pendings_tbl[index][6] ? {
                  str := tab(find("~User("))
                  move(6)
                  usrName := tab(find(")"))
                  }
               showEmail(myargs, pendings_tbl[index][2], 1, "forward", usrName, "user")
               }
            }
         "Reply" : {
            if (pendings_tbl[index][3] == "Group Message(New)") then {
               pendings_tbl[index][6] ? {
                  str := tab(find("~Group("))
                  move(7)
                  sigName := tab(find(")"))
                  }
               showEmail(myargs, pendings_tbl[index][2], 1, "reply", sigName, "sig")
               }
            if (pendings_tbl[index][3] == "Message(Email)(New)") then {
               pendings_tbl[index][6] ? {
                  str := tab(find("~User("))
                  move(6)
                  usrName := tab(find(")"))
                  }
               showEmail(myargs, pendings_tbl[index][2], 1, "reply", usrName, "user")
               }
            }
         "Open" : {
            if (pendings_tbl[index][3] == ("Group Message(New)"|"Group Message(Old)")) then {
               pendings_tbl[index][6] ? {
                  str := tab(find("~Group("))
                  move(7)
                  sigName := tab(find(")"))
                  }
               showEmail(myargs, pendings_tbl[index][2], 0, "open", sigName, "sig")
               }
            if (pendings_tbl[index][3] == ("Message(Email)(New)"|"Message(Email)(Old)")) then {
               pendings_tbl[index][6] ? {
                  str := tab(find("~User("))
                  move(6)
                  usrName := tab(find(")"))
                  }
               showEmail(myargs, pendings_tbl[index][2], 0, "open", usrName, "user")
               }
            }
         }

      if \index then {
         # delete a pending invitation record
         session.Write("\\DELPending "||pendings_tbl[index][1] ||", "||
            pendings_tbl[index][2]||", "||view.user_me) 
         }
      if /emails_selected then
          pending_activity_tbl.set_contents(gui_pendings_tbl)
      else
          pending_activity_tbl.set_contents(gui_emails_tbl)

      self.resize()
      self.dispose()
   end

   method showEmail(args, user, flag, action, objName, objType)
      local sav, dt, grpName

      ##showEmaildlg.sendto_usrs_lst.set_selection_list([user])
      msg_txt := []
      if flag = 1 then {
         put(msg_txt, "")
         put(msg_txt, "")
         put(msg_txt, user ||" wrote:")
         put(msg_txt, "_______________________")
         }
      
      if find("~Group(", pendings_tbl[index][6]) then {
         pendings_tbl[index][6] ? {
            dt := tab(find("~Group(")) #date and time of the message
            move(7)
            grpName := trim(tab(0), ")")
            }
         }
      else if find("~User(", pendings_tbl[index][6]) then{
         pendings_tbl[index][6] ? {
            dt := tab(find("~User(")) #date and time of the message
            move(6)
            grpName := trim(tab(0), ")")
            }
         }

      /action := "open"
      session.Write("\\getEmail "||action||" "||objName||" "||objType||" "||
         pendings_tbl[index][2]||" "||view.user_me||" "||dt)
   end

   method on_pending_activity_tbl(ev)

      index := pending_activity_tbl.get_selections()[1]
      #if /emails_selected then
      #    pendings_tbl := copy(gui_pendings_tbl)
      #else  
      #    pendings_tbl := copy(gui_emails_tbl)

      if \index then {
         if \pendings_tbl[index][3] == "IDE Session" then
            actionsList := ["Accept", "Ignore", "Forward", 
               "Chat", "Email", "Priorities"]
         else if \pendings_tbl[index][3] == "IDE: Take Turn" then
            actionsList := ["Accept", "Ignore", "Chat", "Priorities"]
         else if \pendings_tbl[index][3] == "Forward IDE Session" then
            actionsList := ["Accept", "Ignore", "Chat", "Priorities"]
         else if \pendings_tbl[index][3] == ("Group Invitation" | 
            "Project Invitation" | "Friendship Request" | "Join Group" |
            "Join Project") then
            actionsList := ["Accept", "Ignore"]
         else if \pendings_tbl[index][3] == 
            ("Group Message(New)" | "Message(Email)(New)"|
             "Group Message(Old)" | "Message(Email)(Old)") then
            actionsList := ["Open", "Forward", "Reply"]

         actions_lst.set_selection_list(actionsList)
         pending_activity_tbl.set_tooltip(pendings_tbl[index][1] ||"\n"||
            pendings_tbl[index][2] ||"\n"||pendings_tbl[index][3] ||"\n"||
            pendings_tbl[index][4] ||"\n"||pendings_tbl[index][5] ||"\n"||
            pendings_tbl[index][6])
         recordinfo_lbl.set_contents(
            ["Name: "||pendings_tbl[index][2],
            "Subject: "||pendings_tbl[index][3],
            "Priority: "||pendings_tbl[index][4],
            "Age: "||pendings_tbl[index][5],
            "Status: "||pendings_tbl[index][7],
            "Comments: "||pendings_tbl[index][6]]
            )
          }
   end

   method on_close_btn(ev)
#      self.dispose()
   end

   method get_time(t)
      local tdif, s, m, h, d
      static daysec
      initial daysec:= 24*60*60

      tdif := &now -t
      if tdif > daysec*7 then return ctime(t)

      h := (tdif/3600)% 24

      if tdif > daysec then{
        d := tdif/daysec
        return ( d || " d : " || h || " h")
         }

      m := (tdif/60) % 60
      if tdif > 3600 then
         return (h || " h : " || m || " m")
      s := tdif % 60 
      return (m || " m : " || s || " s")
   end

   method on_clos_btn(ev)
      self.dispose()
   end

   method on_cancel_btn(ev)
      self.dispose()
   end

   method on_ok_btn(ev)
      on_actions(myaction)
   end

   method setup()
      if /emails_selected then
          self.set_attribs("size=475,208", "bg=light gray", 
                                 "fg=very dark blue", "font=serif, 13", "label=Notification(s)")
      else
          self.set_attribs("size=475,208", "bg=light gray", 
                                 "fg=very dark blue", "font=serif, 13", "label=Message(s)")
      pending_activity_tbl := Table()
      pending_activity_tbl.set_pos("1", "1")
      pending_activity_tbl.set_size("100%-155", "100%-2")
      pending_activity_tbl.set_attribs("bg=white")
      pending_activity_tbl.connect(self, "on_pending_activity_tbl", SELECTION_CHANGED_EVENT)
      pending_activity_tbl.set_select_one()
      pending_activity_tbl.set_contents([])
      activity_pid := TableColumn()
      activity_pid.set_label("PID")
      activity_pid.set_internal_alignment("l")
      activity_pid.set_column_width(0)
      pending_activity_tbl.add_column(activity_pid)
      usr_name := TableColumn()
      usr_name.set_label("Name")
      usr_name.set_internal_alignment("l")
      usr_name.set_column_width(50)
      pending_activity_tbl.add_column(usr_name)
      activity_subject := TableColumn()
      activity_subject.set_label("Subject")
      activity_subject.set_internal_alignment("l")
      activity_subject.set_column_width(130)
      pending_activity_tbl.add_column(activity_subject)
      activity_age := TableColumn()
      activity_age.set_label("Age")
      activity_age.set_internal_alignment("l")
      activity_age.set_column_width(70)
      pending_activity_tbl.add_column(activity_age)
      usr_status := TableColumn()
      usr_status.set_label("Status")
      usr_status.set_internal_alignment("l")
      usr_status.set_column_width(60)
      pending_activity_tbl.add_column(usr_status)
      self.add(pending_activity_tbl)
      action_lbl := Label()
      action_lbl.set_pos("100%-147", "1")
      action_lbl.set_size("147", "25")
      action_lbl.set_draw_border()
      action_lbl.set_internal_alignment("c")
      action_lbl.set_label("Action")
      self.add(action_lbl)
      actions_lst := List()
      actions_lst.set_pos("100%-147", "27")
      actions_lst.set_size("147", "25")
      actions_lst.set_attribs("bg=white")
      actions_lst.connect(self, "on_actions_lst", SELECTION_CHANGED_EVENT)

      if /emails_selected then
          actions_lst.set_selection_list(["Accept", "Ignore"])
      else 
          actions_lst.set_selection_list(["Open", "Forward", "Reply"])

      self.add(actions_lst)
      recordinfo_lbl := EditableTextList()
      recordinfo_lbl.set_pos("100%-152", "54")
      recordinfo_lbl.set_size("152", "90%-60")
      recordinfo_lbl.set_contents([""])
      self.add(recordinfo_lbl)
      cancel_btn := TextButton()
      cancel_btn.set_pos("369", "188")
      cancel_btn.set_size("10%", "10%")
      cancel_btn.connect(self, "on_cancel_btn", ACTION_EVENT)
      cancel_btn.clear_toggles()
      cancel_btn.set_label("Close")
      cancel_btn.set_internal_alignment("c")
      self.add(cancel_btn)
      self.connect(self, "on_close_btn", CLOSE_BUTTON_EVENT)
   end

   initially
      self.Dialog.initially()
end
#
#class NotificationsDlg
#
class NotificationsDlg : Dialog(n_action_lbl, n_actions_lst, n_cancel_btn, n_ok_btn, n_recordinfo_lbl, ptable, index)
   method component_setup()
      self.setup()
   end

   method end_dialog()
   end

   method init_dialog()
      if \p_subject == ("Group Message(New)" | "Message(Email)(New)") then
         n_recordinfo_lbl.set_contents([p_comment|| "You got message from "||
            p_name||"."])
      else n_recordinfo_lbl.set_contents([p_comment|| ". Do you accept?"])
      n_actions_lst.set_selection_list(n_actionsList)
      showEmaildlg := ReadEmail()
   end

   method on_n_actions_lst(ev)
      n_myaction := \n_actionsList[n_actions_lst.get_selection()]
   end

   method ide_pendings(p_args)
      myargs := p_args
   end

   method on_n_cancel_btn(ev)
      dispose()
   end

   method on_n_ok_btn(ev)
      if /n_myaction then
         n_myaction := \n_actionsList[1]

      on_notify_actions(n_myaction, p_name, p_subject, p_status, p_id, p_comment, btn_lbl)
   end

   method on_close_btn(ev)
      dispose()
   end

   method notify_init(id, p_n, p_s, p_d, p_st, p_c, p_lbl)
      p_id := id
      p_name := p_n
      p_subject := p_s
      p_date := p_d
      p_status := p_st
      p_comment := p_c
      btn_lbl := p_lbl
      if \p_subject == "IDE Session" then
         n_actionsList := ["Accept", "Ignore", "Forward"]
      else if \p_subject == "IDE: Take Turn" then
         n_actionsList := ["Accept", "Ignore"]
      else if \p_subject == "Forward IDE Session" then
         n_actionsList := ["Accept", "Ignore"]
      else if \p_subject == ("Group Invitation" | "Project Invitation" | 
         "Friendship Request" | "Join Group" | "Join Project") then
         n_actionsList := ["Accept", "Ignore"]
      else if \p_subject == ("Group Message(New)" | "Message(Email)(New)") then
         n_actionsList := ["Open", "Forward", "Reply"]
   end

   method on_notify_actions(n_myaction, p_name, p_subject, p_status, p_id, 
      p_comment, btn_lbl)
      local line, user, index_counter, slave, msg_contents, Addcounter, 
         str_users, userID, sigName, sigOwner, projName, projOwner, sdp_flag,
         sigType, projType, str, usrName, indx, txt, showEmail, m, 
         idesession_node, lnum, cnum, lst_ln

      /index := indx
      case \n_myaction of {
         "Accept" : {
            flag := 1
            if p_subject == "IDE Session" then {
               if p_status ~== "Offline" then {
                  world.nsh_dialog.CETL_New(myargs, flag)
                  projMenu.clear_isShaded()
                  myide_sessions +:= 1
                  idesession_node := view.ide_session_tree.get_root_node()
                  idesession_node.label := "IDE Sessions("||myide_sessions||")"
                  }
               }
            else if p_subject == "IDE: Take Turn" then {
               if p_status ~== "Offline" then
                  world.nsh_dialog.Received_IDE_Lock_Request(myargs, flag)
                  projMenu.clear_isShaded()
               }
            else if p_subject == "Forward IDE Session" then {
               if p_status ~== "Offline" then {
                  myargs ? {
                     user := tab(find(" "))
                     move(1)
                     index_counter := integer(tab(find(" ")))
                     move(1)
                     slave := tab(find(" "))
                     move(1)
                     file_name := tab(find("|"))
                     move(1)
                     file_contents := tab(find("@@"))
                     move(2)
                     msg_contents := tab(find("$$"))
                     move(2)
                     hostuser:=  tab(find("$$"))
                     move(2)
                     Addcounter:= integer(tab(find(" ")))
                     move(1)
                     str_users:= tab(find(" "))
                     move(1)
                     sdp_flag := integer(tab(find(" ")))
                     move(1)
                     lst_ln := integer(tab(find(" ")))
                     move(1)
                     lnum := integer(tab(find(" ")))
                     move(1)
                     cnum := integer(tab(0))
                     }
                  session.Write("\\CETLOpen "||"huge"||" "||slave||" "||file_name||
                     "|"||file_contents||"@@"||msg_contents||"$$"||hostuser||" "||
                     sdp_flag||" "||ide.CurrentEditBox().get_last_line()||" "||
                     ide.CurrentEditBox().cursor_y||" "||ide.CurrentEditBox().cursor_x)

                  session.Write("\\tell "||p_name||" "||
                  view.user_me||" has accepted to forward the session invitation")
                  }
               }
            else if p_subject == "Group Invitation" then {
                  (p_comment) ? {
                     userID := tab(find(" "))
                     move(1)
                     txt := tab(find("~"))
                     move(1)
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := p_name
                  userID := view.user_me
                  myargs := userID||" "||sigName||" "||sigOwner
               ici_groups.Invite_to_join_group(myargs, flag)
               }
            else if p_subject == "Project Invitation" then {
                  (p_comment) ? {
                     userID := tab(find(" "))
                     move(1)
                     txt := tab(find("~"))
                     move(1)
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := p_name
                  userID := view.user_me
                  myargs := userID||" "||projName||" "||projOwner||" "||projOwner
               projectdlg.Invite_to_join_project(myargs, flag)
               }
            else if p_subject == "Friendship Request" then {
               if /myargs then {
                  userID := view.user_me
                  hostuser := p_name
                  myargs := userID||" "||hostuser
                  }
               ici_groups.addFriend_invitation(myargs, flag)
               }
            else if p_subject == "Join Group" then {
                  (p_comment) ? {
                     userID := tab(find(" "))
                     move(1)
                     txt := tab(find("~"))
                     move(1)
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := p_name
                  userID := view.user_me
                  myargs := sigOwner||" "||sigName||" "||userID
               ici_groups.accept_group_join_request(myargs)
               }
            else if p_subject == "Join Project" then {
                  (p_comment) ? {
                     userID := tab(find(" "))
                     move(1)
                     txt := tab(find("~"))
                     move(1)
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := view.user_me
                  userID := p_name
                  myargs := userID||" "||projName||" "||projOwner
               projectdlg.accept_project_join_request(myargs)
               }
            }
         "Ignore" : {
            flag := 0
            if p_subject == "IDE Session" then {
               if p_status ~== "Offline" then
                  world.nsh_dialog.CETL_New(myargs, flag)
               }
            else if p_subject == "IDE: Take Turn" then {
               if p_status ~== "Offline" then
                  world.nsh_dialog.Received_IDE_Lock_Request(myargs, flag)
               }
            else if p_subject == "Forward IDE Session" then {
               if p_status ~== "Offline" then {
                  session.Write("\\tell "||p_name||" "||
                  view.user_me||" has rejected to forward "|| 
                  "the session invitation")
                  }
               }
            else if p_subject == "Group Invitation" then {
               if /myargs then {
                  userID := view.user_me
                  (p_comment) ? {
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := p_name
                  myargs := userID||" "||sigName||" "||sigOwner
                  }
               ici_groups.Invite_to_join_group(myargs, flag)
               }
            else if p_subject == "Project Invitation" then {
               if /myargs then {
                  userID := view.user_me
                  (p_comment) ? {
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := p_name
                  myargs := userID||" "||projName||" "||projOwner||" "||projOwner
                  }
               projectdlg.Invite_to_join_project(myargs, flag)
               }
            else if p_subject == "Friendship Request" then {
               if /myargs then {
                  userID := view.user_me
                  hostuser := p_name
                  myargs := userID||" "||hostuser
                  }
               ici_groups.addFriend_invitation(myargs, flag)
               }
            else if p_subject == "Join Group" then {
               if /myargs then {
                  userID := view.user_me
                  (p_comment) ? {
                     sigType := tab(find(":"))
                     move(1)
                     sigName := tab(0)
                     }
                  sigOwner := p_name
                  }
               else {
                  myargs ? {
                     userID := tab(find(" "))
                     move(1)
                     sigName := tab(find(" "))
                     move(1)
                     sigOwner:= tab(0)
                     }
                  }
               session.Write("\\tell "||sigOwner ||
                  " has rejected your request to join group "||sigName)
               }
            else if p_subject == "Join Project" then {
               if /myargs then {
                  userID := view.user_me
                  (p_comment) ? {
                     projType := tab(find(":"))
                     move(1)
                     projName := tab(0)
                     }
                  projOwner := p_name
                  }
               else {
                  args ? {
                     userID := tab(find(" "))
                     move(1)
                     projName := tab(find(" "))
                     move(1)
                     projOwner:= tab(0)
                     }
                  }
               session.Write("\\tell "||projOwner ||
                  " has rejected your request to join project "||projName)
               }

            }
         "Forward" : {
            if p_subject == "IDE Session" then {
               if p_status ~== "Offline" then {
                  fwrddlg.forwarded_pendings(myargs, p_name, 0)
                  fwrddlg.show_modal()
                  }
               }

            if (p_subject == "Group Message(New)") then {
               p_comment ? {
                  str := tab(find("~Group("))
                  move(7)
                  sigName := tab(find(")"))
                  }
               ici_notifications.showEmail(p_name, 1, "forward", sigName, "sig")
               }
            if (p_subject == "Message(Email)(New)") then {
               p_comment ? {
                  str := tab(find("~User("))
                  move(6)
                  usrName := tab(find(")"))
                  }
               ici_notifications.showEmail(p_name, 1, "forward", usrName, "user")
               }
            }
         "Reply" : {
            if (p_subject == "Group Message(New)") then {
               p_comment ? {
                  str := tab(find("~Group("))
                  move(7)
                  sigName := tab(find(")"))
                  }
               ici_notifications.showEmail(p_name, 1, "reply", sigName, "sig")
               }
            if (p_subject == "Message(Email)(New)") then {
               p_comment ? {
                  str := tab(find("~User("))
                  move(6)
                  usrName := tab(find(")"))
                  }
               ici_notifications.showEmail(p_name, 1, "reply", usrName, "user")
               }
            }
         "Open" : {
            if (p_subject == "Group Message(New)") then {
               p_comment ? {
                  str := tab(find("~Group("))
                  move(7)
                  sigName := tab(find(")"))
                  }
               ici_notifications.showEmail(p_name, 0, "open", sigName, "sig")
               }
            if (p_subject == "Message(Email)(New)") then {
               p_comment ? {
                  str := tab(find("~User("))
                  move(6)
                  usrName := tab(find(")"))
                  }
               ici_notifications.showEmail(p_name, 0, "open", usrName, "user")
               }
            }
         }

      # delete a pending invitation record
      session.Write("\\DELPending "||p_id ||", "||
         p_name||", "||view.user_me) 
      delete(world.user_inventory.pending_inv_table, p_id)

      if p_subject == "Group Message(New)" | 
         p_subject == "Message(Email)(New)" then {
         every m := ! (view.emails_menu_icn.children) do {
            if m.label==btn_lbl then {
               view.emails_menu_icn.remove(m)
               break
               }
            }
         view.emails_menu_icn.set_label(""||
            (*view.emails_menu_icn.children - 1))
         view.emails_menu_icn.resize()
         view.emails_menu_icn.display()
         }
      else {
         every m := ! (view.notifications_menu_icn.children) do {
         if m.label==btn_lbl then {
            view.notifications_menu_icn.remove(m)
            break
            }
         }
         view.notifications_menu_icn.set_label(""||
            (*view.notifications_menu_icn.children))
         view.notifications_menu_icn.resize()
         view.notifications_menu_icn.display()
         }
      self.resize()
      self.dispose()
   end

   method showEmail(user, flag, action, objName, objType)
      local sav, dt, grpName

      msg_txt := []
      if flag = 1 then {
         put(msg_txt, "")
         put(msg_txt, "")
         put(msg_txt, user ||" wrote:")
         put(msg_txt, "_______________________")
         }
      
      if find("~Group(", p_comment) then {
         p_comment ? {
            dt := tab(find("~Group(")) #date and time of the message
            move(7)
            grpName := trim(tab(0), ")")
            }
         }
      else if find("~User(", p_comment) then {
         p_comment ? {
            dt := tab(find("~User(")) #date and time of the message
            move(6)
            grpName := trim(tab(0), ")")
            }
         }

      /action := "open"
      session.Write("\\getEmail "||action||" "||objName||" "||objType||" "||
         user||" "||view.user_me||" "||dt)
   end

   method setup()
      self.set_attribs("size=180,190", "font=serif, 12, bold", "label=Notifications ...")
      self.set_min_size(160, 150)
      n_recordinfo_lbl := EditableTextList()
      n_recordinfo_lbl.set_pos("1", "0")
      n_recordinfo_lbl.set_size("100%-2", "45%")
      n_recordinfo_lbl.set_wrap_mode(25)
      n_recordinfo_lbl.set_draw_border()
      n_recordinfo_lbl.set_contents([""])
      self.add(n_recordinfo_lbl)

      n_action_lbl := Label()
      n_action_lbl.set_pos("1", "45%")
      n_action_lbl.set_size("35%-2", "15%")
      n_action_lbl.set_draw_border()
      n_action_lbl.set_internal_alignment("l")
      n_action_lbl.set_label("Action")
      self.add(n_action_lbl)
      n_actions_lst := List()
      n_actions_lst.set_pos("35%", "45%")
      n_actions_lst.set_size("65%", "15%")
      n_actions_lst.set_attribs("bg=white")
      n_actions_lst.connect(self, "on_n_actions_lst", SELECTION_CHANGED_EVENT)
      n_actions_lst.set_selection_list(n_actionsList)
      self.add(n_actions_lst)

      n_ok_btn := TextButton()
      n_ok_btn.set_pos("20%", "84%")
      n_ok_btn.set_size("30%", "15%")
      n_ok_btn.connect(self, "on_n_ok_btn", ACTION_EVENT)
      n_ok_btn.clear_toggles()
      n_ok_btn.set_label("Ok")
      n_ok_btn.set_internal_alignment("c")
      self.add(n_ok_btn)
      n_cancel_btn := TextButton()
      n_cancel_btn.set_pos("50%", "84%")
      n_cancel_btn.set_size("30%", "15%")
      n_cancel_btn.connect(self, "on_n_cancel_btn", ACTION_EVENT)
      n_cancel_btn.clear_toggles()
      n_cancel_btn.set_label("Cancel")
      n_cancel_btn.set_internal_alignment("c")
      self.add(n_cancel_btn)

      self.connect(self, "on_close_btn", CLOSE_BUTTON_EVENT)
   end

   initially
      self.Dialog.initially()
end

#procedure main()
#   local d
#   d := Pendings()
#   d.show_modal()
#end

### Ivib-v2 layout ##
#class|Canvas|17|Name Table|table|integer|0|6|string|editable_text_list
#|integer|1|string|label|integer|2|string|list|integer|1|string|table|i
#nteger|1|string|table_column|integer|9|string|text_button|integer|5|Su
#perClass Name|string|Dialog|Import Name|string|gui|Button Groups|class
#|ButtonGroupSet|2|Parent Canvas|1|Boxes|list|0|Checkbox Groups|class|C
#heckBoxGroupSet|2|Parent Canvas|1|Boxes|list|0|Gen Indent|integer|3|Ge
#n Main|integer|1|Gen Component Setup|integer|1|Gen Init Dialog|integer
#|1|Gen Initially|integer|1|Dialog Struct|class|CDialog|4|Min Width|nul
#l|Min Height|null|Ticker Rate|null|Attribs|list|4|string|bg=light gray
#|string|fg=very dark blue|string|font=serif, 13|string|label=Pending I
#nvitations|Name|string|PendingsDlg|Width|integer|475|Height|integer|20
#8|Items|list|5|class|CanvasTable|28|Parent Canvas|1|Name|string|pendin
#g_activity_tbl|Class Name|string|Table|Import Name|string|gui|X Fix|nu
#ll|Y Fix|null|W Fix|null|H Fix|null|W Default|null|H Default|null|X Sp
#ec|string|1|Y Spec|string|1|W Spec|string|100%-155|H Spec|string|100%-
#2|X Align|string|l|Y Align|string|t|Is shaded|null|Is Button Subclass|
#null|Draw Border|null|Attribs|list|1|string|bg=white|Tooltip|null|Acce
#l|null|Event Handlers|list|1|list|2|string|SELECTION_CHANGED_EVENT|str
#ing|on_pending_activity_tbl|Class Variable|integer|1|Parent Component|
#1|Select One|integer|1|Select Many|null|Columns|list|5|class|CanvasTab
#leColumn|6|Name|string|activity_pid|Class Variable|integer|1|Label|str
#ing|PID|Column Width|integer|0|Internal Alignment|string|l|Auto width 
#flag|null|class|CanvasTableColumn|6|Name|string|usr_name|Class Variabl
#e|integer|1|Label|string|Name|Column Width|integer|50|Internal Alignme
#nt|string|l|Auto width flag|null|class|CanvasTableColumn|6|Name|string
#|activity_subject|Class Variable|integer|1|Label|string|Subject|Column
# Width|integer|130|Internal Alignment|string|l|Auto width flag|null|cl
#ass|CanvasTableColumn|6|Name|string|activity_age|Class Variable|intege
#r|1|Label|string|Age|Column Width|integer|70|Internal Alignment|string
#|l|Auto width flag|null|class|CanvasTableColumn|6|Name|string|usr_stat
#us|Class Variable|integer|1|Label|string|Status|Column Width|integer|6
#0|Internal Alignment|string|l|Auto width flag|null|class|CanvasLabel|2
#7|Parent Canvas|1|Name|string|action_lbl|Class Name|string|Label|Impor
#t Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null|W Defaul
#t|null|H Default|null|X Spec|string|100%-147|Y Spec|string|1|W Spec|st
#ring|147|H Spec|string|25|X Align|string|l|Y Align|string|t|Is shaded|
#null|Is Button Subclass|null|Draw Border|integer|1|Attribs|list|0|Tool
#tip|null|Accel|null|Event Handlers|list|0|Class Variable|integer|1|Par
#ent Component|1|Label|string|Action|Internal Align|string|c|class|Canv
#asList|28|Parent Canvas|1|Name|string|actions_lst|Class Name|string|Li
#st|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null|
#W Default|null|H Default|null|X Spec|string|100%-147|Y Spec|string|27|
#W Spec|string|147|H Spec|string|25|X Align|string|l|Y Align|string|t|I
#s shaded|null|Is Button Subclass|null|Draw Border|null|Attribs|list|1|
#string|bg=white|Tooltip|null|Accel|null|Event Handlers|list|1|list|2|s
#tring|SELECTION_CHANGED_EVENT|string|on_actions_lst|Class Variable|int
#eger|1|Parent Component|1|Constant Label|null|Selection|integer|1|Sele
#ction List|list|6|string|Accept|string|Ignore|string|Forward|string|Ch
#at|string|Email|string|Priorities|class|CanvasEditableTextList|26|Pare
#nt Canvas|1|Name|string|recordinfo_lbl|Class Name|string|EditableTextL
#ist|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null
#|W Default|null|H Default|null|X Spec|string|100%-152|Y Spec|string|54
#|W Spec|string|152|H Spec|string|90%-60|X Align|string|l|Y Align|strin
#g|t|Is shaded|null|Is Button Subclass|null|Draw Border|null|Attribs|li
#st|0|Tooltip|null|Accel|null|Event Handlers|list|0|Class Variable|inte
#ger|1|Parent Component|1|Contents|list|1|string||class|CanvasTextButto
#n|36|Parent Canvas|1|Name|string|cancel_btn|Class Name|string|TextButt
#on|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null|
#W Default|null|H Default|null|X Spec|string|369|Y Spec|string|188|W Sp
#ec|string|10%|H Spec|string|10%|X Align|string|l|Y Align|string|t|Is s
#haded|null|Is Button Subclass|integer|1|Draw Border|null|Attribs|list|
#0|Tooltip|null|Accel|null|Event Handlers|list|1|list|2|string|ACTION_E
#VENT|string|on_cancel_btn|Class Variable|integer|1|Parent Component|1|
#Label|string|Close|No Keyboard|null|Img Up|null|Img Down|null|Img Widt
#h|null|Img Height|null|Is Checked Flag|null|Is Checkbox Flag|null|Pare
#nt CheckBoxGroup|null|Parent Button Group|null|Internal Align|string|c
#|Initial Focus|null|Event Handlers|list|1|list|2|string|CLOSE_BUTTON_E
#VENT|string|on_close_btn|





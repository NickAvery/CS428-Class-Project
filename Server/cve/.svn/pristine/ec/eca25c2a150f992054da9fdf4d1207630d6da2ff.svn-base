#
# Project: Collaborative Virtual Environment
# Author: Akshay Dabholkar / Kosta Tachtevrenidis
# Date: 9/10/2004
#

#
# filename: groups.icn
# description:
#

$include "../common/defaults.icn"

class Group(name, owner, members, membership, group_db, file)
   
   #
   # create_group: this function creates the necessary
   #               records in the db for the group
   #
   method create_group()
      local db_fd
      if /exists() then {
	 if db_fd := open_db(group_db, "db") then {
	    insert(db_fd, name, group_db)
	    close_db(db_fd)
	    }
	 }
   end
   
   #
   # remove_user: removes this group from the db
   #              group persistence has yet to be discussed
   method remove_group()
      local db_fd 
      
      if db_fd := open_db(group_db, "db") then {
	 delete(db_fd, name)
	 close_db(db_fd)
	 }
   end   
   
   #
   # addMember: adds member to the members table
   #
   method addMember(member1)
      members[member1] := 1 
   end
   
   #
   # removeMember: removes member from the members table
   #
   method removeMember(member)
      delete(members, member)
   end

   #
   # memberList: returns a list containing all the usernames
   #             belonging to this group
   #
   method memberList()
      local userlist := []
      local user := ""
      
      every user := key(members) do {
         put(userlist, user)
      }

      return userlist
   end
   
   #
   # addFile: sets the file for collaboration in this group
   #
   method addFile(fileName)
      file := fileName
      # kosta removed this line
      # we should support only one file per group for now
      # files[fileName] := 1 
   end

   #
   # exists: checks to see if this group exists in the db
   #
   method exists()
      local db_fd, result

      if db_fd := open_db(group_db, "dr") then {
	 result := fetch(db_fd, name)
	 close_db(db_fd)
	 }
      return \result
   end
   
initially(grp_name, grp_owner)
   name := grp_name
   owner := grp_owner
   members := table()
   membership := 0 # Number of members
   group_db := GROUP_DB
   file := "not_set_yet"
end

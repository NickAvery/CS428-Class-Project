################################################################
#
#   File:         icbbutton.icn
#
#   Subject:  SubClass of Icon Button
#
#   Author:   Nolan Clayton
#
#   Date:       May 25, 04
#
################################################################


$include "guih.icn"


#
# class icb Button: Used to overide the display method.
#
class icbButton : IconButton()

   #
   # Display Method: The only modification is the bevel widths are changed
   # to 1 instead of 2.
   #
   method display(buffer_flag)
      local i, cw

      if \is_down then  i := img_down
      else  i := if \is_checked_flag then img_down else img_up

      EraseRectangle(cbwin, x, y, w, h)
      DrawImage(cbwin, x + (w - img_w) / 2, y + (h - img_h) / 2, i)

      if \is_down then {
	 #
	 # Invert the inside of the area
	 #
	 cw := Clone(cbwin, "drawop=reverse")
	 FillRectangle(cw, x, y, w, h)
	 Uncouple(cw)
	 DrawSunkenRectangle(cbwin, x, y, w, h,-1)
	 }
      else {
	 if \draw_border_flag then {
	    if /is_checked_flag then
	       DrawRaisedRectangle(cbwin,x, y, w, h,1)
	    else
	       DrawSunkenRectangle(cbwin,x, y, w, h,1)
	 }
      }
      
      if /no_keyboard_flag & \has_focus then {
	 cw := Clone(cbwin, "pattern=gray", "fillstyle=masked")

	 Rectangle(cw, x + BORDER_WIDTH + 1, y + BORDER_WIDTH + 1,
	           w - 2 * BORDER_WIDTH - 2, h - 2 * BORDER_WIDTH - 2)

	 Uncouple(cw)
	 }
      do_shading(cbwin)
      if /buffer_flag then CopyArea(cbwin, cwin, x, y, w, h, x, y)
      return
   end
   
initially()
   self$IconButton.initially()
end

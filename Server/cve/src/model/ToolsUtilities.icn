

class ToolsUtilities(opMode,x,y,z,Id,
   origXangle,origYangle,origZangle,
   romx,romy,romz,
   rox,roy,roz,
   mov,rot,mv,mvDraw,
   sca,
   movable,
   isMoving,
   owner,
   placedAt,
   cover,
   render_set,
      avatarSizeX,
      avatarSizeY,
      avatarSizeZ,
      avatarPartX,
      avatarPartY,
      avatarPartZ,
      avatarObjX,
      avatarObjY,
      avatarObjZ,
     possessed,
     name
)

   method setSize(xscale,yscale,zscale)
      avatarSizeX:=xscale
      avatarSizeY:=yscale
      avatarSizeZ:=zscale
      #sca.x:=xscale
      #sca.y:=yscale
      #sca.z:=zscale
   end
   method setPosAvatar(posx,posy,posz,angle)
      #write("entered setposavatar")
      mov.x:=posx
      mov.y:=posy
      mov.z:=posz
      rot.angle:=angle
   end
   method setPosPart(posx,posy,posz)
      #write("entered setpospart")
      avatarPartX:=posx
      avatarPartY:=posy
      avatarPartZ:=posz
      mv.x:=posx
      mv.y:=posy
      mv.z:=posz
   end
   method setPosObj(posx,posy,posz)
      #write("entered setposobj")
      avatarObjX:=posx
      avatarObjY:=posy
      avatarObjZ:=posz
      mvDraw.x:=posx
      mvDraw.y:=posy
      mvDraw.z:=posz
      rox.angle:=110
      roy.angle:=0
      roz.angle:=0
   end
   method moveAlongAvatar(posx,posy,posz,angle)
      #write("entered movealongavatar")
      rot.angle:=angle
      mov.x:=posx
      mov.y:=posy
      mov.z:=posz
   end
   method moveAlongPart(xangle,yangle,zangle)
      #write("entered movealongpart")
      romx.angle:=xangle
      romy.angle:=yangle
      romz.angle:=zangle
   end

   method deRender()
        local len, i, item, dispList

        dispList := WindowContents(&window)
        len := *WindowContents(&window)
        every i := 1 to len do {
            item := pop(dispList)
            if not member(render_set,item) then put(dispList, item)
        }
        return
   end # method deRender()


  method getX()
      return x
   end
   method getY()
      return y
   end
   method getZ()
      return z
   end
   method getOwner()
      return owner
   end
   method setOwner(newowner)
      owner:=newowner
   end
   method getPlacedAt()
      return placedAt
   end
  method getMovable()

      return isMoving
  end
  method getPossessed()

      return possessed
  end


initially()
   render_set := set()
   #possessed := 0
end


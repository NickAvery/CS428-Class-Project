#
# A class drawing decorative windowblinds
#

class Windowblinds(
           x,
           y,
           z,
           color_rod,
           color_blinds,
           angle,
           height,
           width)


method render(render_level)
local i,j,k, x_trans, z_trans,h
j := 0
WAttrib("texmode=off")
Fg(color_rod)
PushMatrix()
  Translate(x,y,z)
  PushMatrix()
    Translate(0,height/2,0)
    Rotate(angle,0,1,0)
    Rotate(90,1,0,0)
    DrawCylinder(0,0,0,width,0.02,0.02)
  PopMatrix()
  Fg(color_blinds)

if render_level = 3 then
   k := width / 0.2
else
if render_level = 2 then    
   k := width / 0.4
else
if render_level = 1 then    
   k := width / 0.6
else
if render_level = 0 then    
   k := width / 0.8


h := 2.0/0.06
every i := 1 to k do {
   x_trans := j * sin(dtor(angle))
   z_trans := j * cos(dtor(angle)) 
 PushMatrix()
      Translate(x_trans,0.5,z_trans)
      Rotate(angle,0,1,0)
      Rotate(75,0,1,0)
      Scale(1.65,h,0.05)
  DrawCube(0,0,0,0.06)
    PopMatrix()

if render_level = 3 then
 j := j + 0.2 
else 
if render_level = 2 then 
j := j + 0.4  
else 
if render_level = 1 then 
j := j + 0.6  
else 
if render_level = 0 then 
j := j + 0.8  

}
 PushMatrix()
   Translate(0,0.25,0)
   DrawCylinder(0,0,0,0.5,0.015,0.015)
 PopMatrix()
PopMatrix()
WAttrib("texmode=on")
end

   
initially(coords,pos,crod,cblinds,ht,wth)
#self.opMode := opMode
x := coords[1]
y := coords[2]
z := coords[3]
angle := pos
color_rod := crod 
color_blinds := cblinds
height := ht
width := wth
#default values
/x := 0
/y := 0
/z := 0
/color_rod := "blue"
/color_blinds := "green"
/width := 2
/height := 2
   
end 


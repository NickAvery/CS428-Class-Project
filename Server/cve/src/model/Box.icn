
#
# this class should not merge with class Room;
# it has a separate existence because of obstacles and such
#
class Box : Obstacle(opMode, walls, minx, miny, maxy, maxx, minz, maxz,
		     collide, world)
   method mkwall( x[] )
      local w, t
      if type(x[1]) == "string" then t := pop(x) 
      else if map(opMode) == "c" then
	 t := self.world.d_wall_tex
      w := Wall ! push(x, t,self.world,self.opMode)
      put(walls, w)
      return w
   end

   method render()
      every (!walls).render()
   end

   # why did Box.disallows get removed? Someone not understand obstacles?
   method disallows(x,z)  ## Box
      if /minx then calc_boundbox()
      if minx-collide <= x <= maxx+collide &
	  minz-collide <= z <= maxz+collide then {
         return
      }
   end

   method calc_boundbox()  ## Box
      local w, L, i
      maxx := minx := walls[1].coords[1]
      maxy := miny := walls[1].coords[2]
      maxz := minz := walls[1].coords[3]
      every w := !walls do {
	 L := w.coords
	 every i := 1 to *L by 3 do {
	    minx >:= L[i]
	    maxx <:= L[i]
	    miny >:= L[i+1]
	    maxy <:= L[i+1]
	    minz >:= L[i+2]
	    maxz <:= L[i+2]
	    }
	 }
   end

initially(opMode,world)  ## Box
   self.opMode := opMode
   self.world := world
   walls     := []
   if map(opMode) == "c" then {
      # distance to maintain camera from walls to keep textures unpixelated
      collide     := self.world.collide
      }
   else {
      collide     := 0.8   
      }
end  # class Box
